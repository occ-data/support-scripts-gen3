BASE_URL: https://<<your_hostname>>/user
ACCESS_TOKEN_COOKIE_NAME: access_token
ACCESS_TOKEN_EXPIRES_IN: 1200
ALLOW_GOOGLE_LINKING: true
ALLOWED_USER_SERVICE_ACCOUNT_DOMAINS:
- developer.gserviceaccount.com
- appspot.gserviceaccount.com
- iam.gserviceaccount.com
APP_NAME: Gen3 Data Commons
APPLICATION_ROOT: /user
ARBORIST: http://arborist-service
ASSUME_ROLE_CACHE_SECONDS: 1800
AUDIT_SERVICE: http://audit-service
AUTHLIB_INSECURE_TRANSPORT: true
AWS_CREDENTIALS: {}
AZ_BLOB_CONTAINER_URL: https://myfakeblob.blob.core.windows.net/my-fake-container/
CIRRUS_CFG:
  GOOGLE_ADMIN_EMAIL: ""
  GOOGLE_API_KEY: ""
  GOOGLE_APPLICATION_CREDENTIALS: ""
  GOOGLE_CLOUD_IDENTITY_ADMIN_EMAIL: ""
  GOOGLE_IDENTITY_DOMAIN: ""
  GOOGLE_PROJECT_ID: ""
  GOOGLE_STORAGE_CREDS: ""
CLIENT_ALLOWED_SCOPES:
- openid
- user
- data
- google_credentials
- google_service_account
- google_link
- ga4gh_passport_v1
DATA_UPLOAD_BUCKET: bucket1
DBGAP_ACCESSION_WITH_CONSENT_REGEX: (?P<phsid>phs[0-9]+)(.(?P<version>v[0-9]+)){0,1}(.(?P<participant_set>p[0-9]+)){0,1}.(?P<consent>c[0-9]+)
DEBUG: false
DEFAULT_LOGIN_IDP: google
DEFAULT_LOGIN_URL: '{{BASE_URL}}/login/google'
DEV_LOGIN_COOKIE_NAME: dev_login
DREAM_CHALLENGE_GROUP: DREAM
DREAM_CHALLENGE_TEAM: DREAM
EMAIL_SERVER: localhost
ENABLE_AUDIT_LOGS:
  login: false
  presigned_url: false
ENABLE_AUTOMATIC_BILLING_PERMISSION_SA_CREDS: false
ENABLE_AUTOMATIC_BILLING_PERMISSION_SIGNED_URLS: false
ENABLE_CSRF_PROTECTION: true
ENABLE_DB_MIGRATION: true
ENABLE_PROMETHEUS_METRICS: false
ENABLED_IDENTITY_PROVIDERS: {}
ENCRYPTION_KEY: REPLACEME
GA4GH_VISA_ISSUER_ALLOWLIST:
- '{{BASE_URL}}'
- https://sts.nih.gov
- https://stsstg.nih.gov
GEN3_PASSPORT_EXPIRES_IN: 43200
GLOBAL_PARSE_VISAS_ON_LOGIN: false
GOOGLE_ACCOUNT_ACCESS_EXPIRES_IN: 86400
GOOGLE_BULK_UPDATES: false
GOOGLE_GROUP_PREFIX: ""
GOOGLE_MANAGED_SERVICE_ACCOUNT_DOMAINS:
- dataflow-service-producer-prod.iam.gserviceaccount.com
- cloudbuild.gserviceaccount.com
- cloud-ml.google.com.iam.gserviceaccount.com
- container-engine-robot.iam.gserviceaccount.com
- dataflow-service-producer-prod.iam.gserviceaccount.com
- sourcerepo-service-accounts.iam.gserviceaccount.com
- dataproc-accounts.iam.gserviceaccount.com
- gae-api-prod.google.com.iam.gserviceaccount.com
- genomics-api.google.com.iam.gserviceaccount.com
- containerregistry.iam.gserviceaccount.com
- container-analysis.iam.gserviceaccount.com
- cloudservices.gserviceaccount.com
- stackdriver-service.iam.gserviceaccount.com
- appspot.gserviceaccount.com
- partnercontent.gserviceaccount.com
- trifacta-gcloud-prod.iam.gserviceaccount.com
- gcf-admin-robot.iam.gserviceaccount.com
- compute-system.iam.gserviceaccount.com
- gcp-sa-websecurityscanner.iam.gserviceaccount.com
- storage-transfer-service.iam.gserviceaccount.com
- firebase-sa-management.iam.gserviceaccount.com
- firebase-rules.iam.gserviceaccount.com
- gcp-sa-cloudbuild.iam.gserviceaccount.com
- gcp-sa-automl.iam.gserviceaccount.com
- gcp-sa-datalabeling.iam.gserviceaccount.com
- gcp-sa-cloudscheduler.iam.gserviceaccount.com
GOOGLE_SERVICE_ACCOUNT_KEY_FOR_URL_SIGNING_EXPIRES_IN: 2592000
GOOGLE_SERVICE_ACCOUNT_PREFIX: ""
GOOGLE_USER_SERVICE_ACCOUNT_ACCESS_EXPIRES_IN: 604800
GUN_MAIL:
  datacommons.io:
    api_key: ""
    api_url: https://api.mailgun.net/v3/mailgun.example.com
    default_login: postmaster@mailgun.example.com
    smtp_hostname: smtp.mailgun.org
    smtp_password: ""
HTTP_PROXY:
  port: 3128
INDEXD: http://indexd-service
INDEXD_PASSWORD: ""
INDEXD_USERNAME: fence
ITRUST_GLOBAL_LOGOUT: https://auth.nih.gov/siteminderagent/smlogout.asp?mode=nih&AppReturnUrl=
LOGIN_OPTIONS:
- desc: description
  idp: google
  name: Login from Google
LOGIN_REDIRECT_WHITELIST: []
MAX_ACCESS_TOKEN_TTL: 3600
MAX_API_KEY_TTL: 2592000
MAX_PRESIGNED_URL_TTL: 3600
MAX_ROLE_SESSION_INCREASE: false
MOCK_AUTH: false
MOCK_GOOGLE_AUTH: false
MOCK_STORAGE: false
OAUTH2_JWT_ALG: RS256
OAUTH2_JWT_ENABLED: true
OAUTH2_JWT_ISS: '{{BASE_URL}}'
OAUTH2_PROVIDER_ERROR_URI: /api/oauth2/errors
OAUTH2_TOKEN_EXPIRES_IN:
  authorization_code: 1200
  implicit: 1200
OPENID_CONNECT:
  cilogon:
    client_id: ""
    client_secret: ""
    discovery_url: https://cilogon.org/.well-known/openid-configuration
    mock: false
    mock_default_user: http://cilogon.org/serverT/users/64703
    redirect_url: '{{BASE_URL}}/login/cilogon/login/'
    scope: openid email profile
  cognito:
    client_id: ""
    client_secret: ""
    discovery_url: https://cognito-idp.{REGION}.amazonaws.com/{USER-POOL-ID}/.well-known/openid-configuration
    redirect_url: '{{BASE_URL}}/login/cognito/login/'
    scope: openid email
  fence:
    access_token_url: '{{api_base_url}}/oauth2/token'
    api_base_url: ""
    authorize_url: '{{api_base_url}}/oauth2/authorize'
    client_id: ""
    client_kwargs:
      redirect_uri: '{{BASE_URL}}/login/fence/login'
      scope: openid
    client_secret: ""
    mock: false
    mock_default_user: test@example.com
    name: ""
    refresh_token_url: '{{api_base_url}}/oauth2/token'
    shibboleth_discovery_url: https://login.bionimbus.org/Shibboleth.sso/DiscoFeed
  generic_oidc_idp:
    client_id: ""
    client_secret: ""
    discovery:
      authorization_endpoint: ""
      jwks_uri: ""
      token_endpoint: ""
    discovery_url: https://server.com/.well-known/openid-configuration
    email_field: ""
    name: some_idp
    redirect_url: '{{BASE_URL}}/login/some_idp/login'
    scope: ""
    user_id_field: ""
  google:
    client_id: "" # <<your_google_client_id>>
    client_secret: "" # <<your_google_client_secret>>
    discovery_url: https://accounts.google.com/.well-known/openid-configuration
    mock: ""
    mock_default_user: test@example.com
    redirect_url: '{{BASE_URL}}/login/google/login/'
    scope: openid email
  microsoft:
    client_id: ""
    client_secret: ""
    discovery_url: https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration
    mock: false
    mock_default_user: test@example.com
    redirect_url: '{{BASE_URL}}/login/microsoft/login/'
    scope: openid email
  okta:
    client_id: ""
    client_secret: ""
    discovery_url: ""
    redirect_url: '{{BASE_URL}}/login/okta/login/'
    scope: openid email
  orcid:
    client_id: ""
    client_secret: ""
    discovery_url: https://orcid.org/.well-known/openid-configuration
    mock: false
    mock_default_user: 0000-0002-2601-8132
    redirect_url: '{{BASE_URL}}/login/orcid/login/'
    scope: openid
  ras:
    client_id: ""
    client_secret: ""
    discovery_url: https://sts.nih.gov/.well-known/openid-configuration
    mock: false
    mock_default_user: test@example.com
    redirect_url: '{{BASE_URL}}/login/ras/callback'
    scope: openid email profile ga4gh_passport_v1
  shibboleth:
    client_id: ""
    client_secret: ""
    redirect_url: '{{BASE_URL}}/login/shib/login'
  synapse:
    client_id: ""
    client_secret: ""
    discovery_url: ""
    redirect_url: ""
    scope: openid
OVERRIDE_NGINX_RATE_LIMIT: 18
PROBLEM_USER_EMAIL_NOTIFICATION:
  admin:
  - admin@example.edu
  content: |
    The Data Commons Framework utilizes dbGaP for data access authorization. Another member of a Google project you belong to ({}) is attempting to register a service account to the following additional datasets ({}). Please contact dbGaP to request access.
  domain: example.com
  from: do-not-reply@example.com
  subject: Account access error notification
PUSH_AUDIT_LOGS_CONFIG:
  aws_sqs_config: {}
  type: aws_sqs
RAS_REFRESH_EXPIRATION: 1296000
RAS_USERINFO_ENDPOINT: /openid/connect/v1.1/userinfo
REFRESH_TOKEN_EXPIRES_IN: 2592000
REGISTER_USERS_ON: false
REGISTERED_USERS_GROUP: ""
REMOVE_SERVICE_ACCOUNT_EMAIL_NOTIFICATION:
  admin:
  - admin@example.edu
  content: |
    Service accounts were removed from access control data because some users or service accounts of GCP Project {} are not authorized to access the data sets associated to the service accounts, or do not adhere to the security policies.
  domain: example.com
  enable: false
  from: do-not-reply@example.com
  subject: User service account removal notification
RENEW_ACCESS_TOKEN_BEFORE_EXPIRATION: false
S3_BUCKETS: {}
SEND_FROM: example@gmail.com
SEND_TO: example@gmail.com
SERVICE_ACCOUNT_LIMIT: 6
SESSION_ALLOWED_SCOPES:
- openid
- user
- credentials
- data
- admin
- google_credentials
- google_service_account
- google_link
- ga4gh_passport_v1
SESSION_COOKIE_NAME: fence
SESSION_COOKIE_SECURE: true
SESSION_LIFETIME: 28800
SESSION_TIMEOUT: 1800
SHIBBOLETH_HEADER: persistent_id
SSO_URL: https://auth.nih.gov/affwebservices/public/saml2sso?SPID={{BASE_URL}}/shibboleth&RelayState=
STORAGE_CREDENTIALS: {}
SYNAPSE_AUTHZ_TTL: 86400
SYNAPSE_URI: https://repo-prod.prod.sagebase.org/auth/v1
TOKEN_PROJECTS_CUTOFF: 10
USER_ALLOWED_SCOPES:
- fence
- openid
- user
- data
- admin
- google_credentials
- google_service_account
- google_link
- ga4gh_passport_v1
USERSYNC:
  fallback_to_dbgap_sftp: false
  sync_from_visas: false
  visa_types:
    ras:
    - https://ras.nih.gov/visas/v1
    - https://ras.nih.gov/visas/v1.1
WHITE_LISTED_GOOGLE_PARENT_ORGS: []
WHITE_LISTED_SERVICE_ACCOUNT_EMAILS: []
WTF_CSRF_SECRET_KEY: '{{ENCRYPTION_KEY}}'
dbGaP:
- decrypt_key: ""
  enable_common_exchange_area_access: false
  info:
    host: ""
    password: ""
    port: 22
    proxy: ""
    username: ""
  parse_consent_code: true
  protocol: sftp
  study_common_exchange_areas:
    example: test_common_exchange_area
  study_to_resource_namespaces:
    _default:
    - /
    test_common_exchange_area:
    - /dbgap/
